// Common data type implementations
// Intended to be re-used

syntax = "proto3";

/*
* Leaf
* Used to define a Tree structure for Part hierarchy
*/
message Leaf {
    string value = 1;
    repeated Leaf children = 2;
}

message Vector2_i32 {
    int32 x = 1;
    int32 y = 2;
}

message Vector_i32 {
    int32 x = 1;
    int32 y = 2;
    int32 z = 3;
    int32 w = 4;
}

message Vector_f {
    float x = 1;
    float y = 2;
    float z = 3;
    float w = 4;
}

/* The Double equivalent - storage safe */ 
message Vector3_D {
    double x = 1;
    double y = 2;
    double z = 3;
}

message PhysicalProperties {
    int32 friction = 1;
    double density = 2; // kg per cubic cm kg/(cm^3)
    double mass = 3; // kg
    double volume = 4; //cm^3
    double area = 5; // cm^2
    Vector_f com = 6; // non-negative? Vec3
    /* add color information */
}

/* Describes the Occurrence translation from the component origin */
// https://www.brainvoyager.com/bv/doc/UsersGuide/CoordsAndTransforms/SpatialTransformationMatrices.html#:~:text=Homogeneous%20coordinates%20(4%2Delement%20vectors,points%20and%203%2Drow%20matrices.
message Translation {
    Vector3_D origin = 1;
    Vector3_D x = 2;
    Vector3_D y = 3;
    Vector3_D z = 4;
}

message Transform {
    repeated double flat_matrix = 1;
    Translation translation = 2;
    Rotation rotation = 3;
}

message Rotation {
    int32 euler_x = 1;
    int32 euler_y = 2;
    int32 euler_z = 3;
}

message Appearance {
    Color albedo = 1;
    float roughness = 2;
    float metallic = 3;
    float specular = 4;
}

message Material {
    Info info = 1;
    double friction = 2;
}

// RGBA in expanded form 0-255
message Color {
    // red 
    int32 R = 1;
    // green
    int32 G = 2;
    // blue
    int32 B = 3;
    // alpha
    int32 opacity = 4;
}

// Axis Enum
enum Axis {
    X = 0;
    Y = 1;
    Z = 2;
}

/*
* Info
* Defines basic fields for almost all objects
* The location where you can access the GUID for a reference
*/
message Info {
    // Generic readable name
    string name = 1;
    // GUID unique value - must always be defined
    string GUID = 2;
    // Version of design iteration
    int32 version = 3;
}