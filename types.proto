// Common data type implementations
// Intended to be re-used

syntax = "proto3";

package mirabuf;

// Each proper object within the Graph - First one is Root
message Node {
    string value = 1;
    repeated Node children = 2;
    UserData user_data = 3;
}

// Top level GraphContainer
// Contains all Graph elemebt roots within
message GraphContainer {
    repeated Node nodes = 1;
}

/**
 * UserData
 * 
 * Arbitrary data to append to a given message in map form
 */
message UserData {
    map<string, string> data = 1; /// e.g. data["wheel"] = "yes"
}

/**
 * Represents a type of data encoding
 *
 */
enum DataType {
    XML = 0;
    JSON = 1;
}

/**
 * EncodedData
 *
 * Defines a section of data encoded with a specific type
 * e.g. XML with a type specification
 */
message EncodedData {
    DataType type = 1; /// enum for type parsing
    string data = 2; /// actual data output to parse
    string schema = 3; /// format specifier to parse it with
}

message Vector3 {
    float x = 1;
    float y = 2;
    float z = 3;
}

message PhysicalProperties {
    double density = 1; /// kg per cubic cm kg/(cm^3)
    double mass = 2;    /// kg
    double volume = 3;  /// cm^3
    double area = 4;    /// cm^2
    Vector3 com = 5; /// non-negative? Vec3
}

/**
 * Transform
 *
 * Data needed to apply scale, position, and rotational changes
 */
message Transform {
    /*
     *   flat map of 4x4 transform matrix 
     *   [00][01][02][03][10][11][12][13][20][21][22][23] 
    */
    repeated float spatial_matrix = 1;
}

// RGBA in expanded form 0-255
message Color {
    // red 
    int32 R = 1;
    // green
    int32 G = 2;
    // blue
    int32 B = 3;
    // alpha
    int32 A = 4;
}

// Axis Enum
enum Axis {
    X = 0;
    Y = 1;
    Z = 2;
}

/**
 * Defines basic fields for almost all objects
 * The location where you can access the GUID for a reference
 */
message Info {
    // GUID unique value - must always be defined
    // since guid's have exactly 128bits could be represented with bytes[]
    // however endian becomes an issue
    string GUID = 1;
    // Generic readable name
    string name = 2;
    // Version of object iteration
    uint32 version = 3;
}

message FileTypeInformation {
    /// full name of file
    string name = 1;
    /// extension used in file
    string extension = 2;
    /// unix timestamp
    string timestamp = 3;
}